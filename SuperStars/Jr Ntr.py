#junior ntr in python
import turtle as tu
tu.bgcolor("orange red")

class googlemapslogo:
    def __init__(self):
        self.hairbeard =[(302, 221) ,(301, 231) ,(300, 238) ,(297, 246) ,(296, 254) ,(299, 265) ,(302, 274) ,(305, 284) ,(307, 294) ,(306, 303) ,(312, 312) ,(318, 320) ,(325, 324) ,(329, 328) ,(332, 336) ,(334, 343) ,(334, 354) ,(337, 346) ,(339, 352) ,(343, 346) ,(343, 343) ,(345, 336) ,(350, 330) ,(357, 328) ,(361, 325) ,(356, 325) ,(365, 324) ,(369, 323) ,(374, 322) ,(380, 321) ,(385, 321) ,(390, 323) ,(393, 327) ,(399, 331) ,(404, 332) ,(408, 332) ,(413, 332) ,(417, 331) ,(419, 329) ,(424, 329) ,(429, 331) ,(434, 335) ,(440, 340) ,(450, 349) ,(446, 349) ,(455, 356) ,(450, 356) ,(454, 359) ,(454, 364) ,(462, 362) ,(466, 358) ,(470, 356) ,(473, 352) ,(475, 347) ,(477, 342) ,(480, 342) ,(484, 338) ,(486, 334) ,(487, 330) ,(490, 323) ,(492, 320) ,(493, 311) ,(495, 310) ,(496, 304) ,(500, 299) ,(502, 293) ,(502, 303) ,(501, 307) ,(500, 313) ,(499, 319) ,(495, 324) ,(496, 331) ,(493, 337) ,(491, 343) ,(489, 345) ,(488, 350) ,(487, 356) ,(485, 361) ,(482, 364) ,(479, 369) ,(473, 375) ,(472, 381) ,(469, 386) ,(466, 391) ,(464, 395) ,(461, 403) ,(461, 400) ,(458, 402) ,(457, 406) ,(455, 403) ,(453, 405) ,(450, 408) ,(447, 413) ,(441, 419) ,(439, 423) ,(435, 427) ,(432, 432) ,(430, 435) ,(427, 440) ,(423, 444) ,(420, 447) ,(418, 452) ,(418, 449) ,(415, 450) ,(411, 456) ,(411, 452) ,(408, 459) ,(407, 455) ,(401, 463) ,(403, 456) ,(398, 464) ,(397, 459) ,(393, 465) ,(392, 461) ,(390, 466) ,(388, 464) ,(384, 466) ,(383, 463) ,(381, 465) ,(381, 460) ,(379, 459) ,(378, 466) ,(375, 459) ,(376, 467) ,(371, 459) ,(370, 463) ,(367, 455) ,(365, 463) ,(363, 458) ,(363, 462) ,(359, 453) ,(358, 457) ,(360, 461) ,(355, 456) ,(356, 461) ,(352, 453) ,(352, 457) ,(348, 448) ,(346, 453) ,(344, 447) ,(344, 451) ,(340, 443) ,(340, 447) ,(338, 437) ,(337, 444) ,(335, 439) ,(332, 441) ,(331, 436) ,(329, 434) ,(328, 431) ,(325, 421) ,(324, 415) ,(323, 428) ,(321, 416) ,(323, 406) ,(323, 402) ,(313, 396) ,(309, 392) ,(302, 380) ,(303, 385) ,(298, 378) ,(294, 372) ,(291, 366) ,(288, 360) ,(287, 353) ,(284, 343) ,(281, 330) ,(279, 318) ,(279, 305) ,(280, 294) ,(281, 283) ,(284, 272) ,(285, 265) ,(287, 257) ,(290, 250) ,(292, 240) ,(295, 232) ,(295, 224) ,(296, 218) ,(296, 208) ,(293, 198) ,(289, 194) ,(288, 188) ,(290, 181) ,(292, 172) ,(292, 166) ,(293, 157) ,(296, 148) ,(297, 137) ,(298, 130) ,(300, 121) ,(300, 114) ,(302, 105) ,(306, 98) ,(309, 93) ,(312, 88) ,(317, 85) ,(315, 78) ,(314, 69) ,(314, 59) ,(318, 50) ,(321, 45) ,(328, 39) ,(333, 34) ,(338, 32) ,(341, 25) ,(345, 23) ,(351, 21) ,(353, 18) ,(360, 17) ,(366, 13) ,(373, 9) ,(381, 7) ,(386, 4) ,(393, 6) ,(397, 7) ,(400, 7) ,(403, 9) ,(409, 8) ,(416, 7) ,(426, 8) ,(437, 8) ,(442, 9) ,(451, 11) ,(458, 13) ,(464, 14) ,(468, 17) ,(474, 19) ,(482, 22) ,(487, 26) ,(492, 28) ,(497, 32) ,(500, 34) ,(503, 36) ,(506, 39) ,(511, 44) ,(513, 44) ,(515, 47) ,(516, 48) ,(521, 54) ,(525, 62) ,(527, 71) ,(529, 76) ,(531, 83) ,(535, 87) ,(538, 96) ,(541, 105) ,(542, 114) ,(538, 117) ,(536, 121) ,(533, 126) ,(532, 135) ,(532, 140) ,(531, 146) ,(531, 149) ,(533, 156) ,(532, 165) ,(530, 174) ,(528, 183) ,(529, 191) ,(526, 200) ,(523, 206) ,(521, 212) ,(519, 215) ,(517, 223) ,(513, 229) ,(512, 236) ,(512, 240) ,(511, 246) ,(510, 257) ,(508, 256) ,(507, 252) ,(508, 247) ,(508, 243) ,(509, 237) ,(506, 229) ,(504, 227) ,(506, 225) ,(507, 216) ,(506, 205) ,(504, 198) ,(507, 198) ,(508, 191) ,(512, 191) ,(509, 181) ,(510, 177) ,(508, 171) ,(505, 163) ,(503, 157) ,(499, 158) ,(490, 158) ,(492, 155) ,(488, 156) ,(480, 158) ,(470, 156) ,(463, 153) ,(454, 149) ,(453, 156) ,(450, 149) ,(443, 143) ,(435, 142) ,(421, 141) ,(416, 139) ,(408, 132) ,(401, 131) ,(391, 130) ,(384, 131) ,(379, 129) ,(371, 123) ,(367, 118) ,(360, 111) ,(359, 110) ,(354, 115) ,(350, 116) ,(342, 119) ,(336, 126) ,(348, 123) ,(338, 131) ,(337, 136) ,(335, 142) ,(343, 141) ,(337, 150) ,(338, 157) ,(341, 166) ,(333, 165) ,(342, 170) ,(336, 172) ,(342, 173) ,(335, 176) ,(341, 177) ,(332, 181) ,(340, 185) ,(333, 187) ,(337, 191) ,(328, 194) ,(322, 195) ,(312, 196) ,(317, 198) ,(313, 200) ,(317, 207) ,(311, 207) ,(306, 208) ,(303, 214) ,(302, 222)]
        self.hairbg =[(335, 98) ,(341, 104) ,(352, 112) ,(360, 104) ,(367, 113) ,(373, 120) ,(382, 127) ,(386, 124) ,(392, 124) ,(403, 124) ,(411, 129) ,(420, 131) ,(435, 136) ,(446, 139) ,(451, 155) ,(457, 146) ,(463, 149) ,(476, 148) ,(491, 148) ,(499, 145) ,(498, 151) ,(512, 148) ,(521, 136) ,(528, 130) ,(518, 132) ,(506, 138) ,(508, 122) ,(496, 140) ,(489, 141) ,(485, 143) ,(495, 121) ,(484, 132) ,(487, 120) ,(486, 104) ,(485, 100) ,(474, 106) ,(480, 91) ,(471, 100) ,(470, 85) ,(465, 91) ,(451, 92) ,(434, 93) ,(448, 67) ,(441, 77) ,(436, 58) ,(435, 81) ,(432, 75) ,(424, 85) ,(417, 87) ,(409, 88) ,(412, 67) ,(408, 80) ,(400, 59) ,(395, 75) ,(399, 82) ,(402, 93) ,(403, 104) ,(399, 111) ,(389, 119) ,(377, 119) ,(371, 110) ,(379, 97) ,(377, 90) ,(376, 86) ,(380, 78) ,(374, 82) ,(375, 78) ,(370, 87) ,(362, 82) ,(362, 87) ,(359, 87) ,(354, 98) ,(353, 87) ,(347, 99) ,(339, 97) ,(335, 99)]
        self.face1 =[(326, 192) ,(326, 175) ,(326, 159) ,(330, 138) ,(334, 123) ,(347, 107) ,(363, 102) ,(379, 111) ,(391, 119) ,(399, 119) ,(416, 126) ,(433, 128) ,(439, 128) ,(462, 132) ,(476, 143) ,(502, 142) ,(514, 142) ,(521, 160) ,(519, 185) ,(513, 206) ,(512, 221) ,(511, 231) ,(510, 242) ,(508, 258) ,(508, 268) ,(507, 287) ,(505, 296) ,(501, 309) ,(499, 321) ,(493, 328) ,(490, 338) ,(483, 346) ,(470, 362) ,(451, 374) ,(440, 355) ,(426, 337) ,(402, 335) ,(389, 332) ,(372, 331) ,(360, 333) ,(355, 343) ,(338, 354) ,(327, 340) ,(309, 319) ,(301, 307) ,(301, 279) ,(293, 263) ,(296, 232) ,(300, 216) ,(305, 202) ,(314, 190) ,(327, 191) ,(331, 191)]
        self.face2 =[(441, 237) ,(442, 225) ,(439, 216) ,(450, 215) ,(461, 216) ,(475, 214) ,(480, 212) ,(483, 211) ,(487, 204) ,(488, 192) ,(484, 180) ,(484, 166) ,(493, 157) ,(505, 161) ,(504, 179) ,(508, 189) ,(502, 199) ,(504, 205) ,(504, 211) ,(506, 217) ,(505, 225) ,(507, 232) ,(508, 236) ,(508, 240) ,(508, 244) ,(506, 249) ,(507, 255) ,(505, 255) ,(499, 247) ,(490, 243) ,(485, 240) ,(478, 240) ,(474, 240) ,(466, 240) ,(453, 241) ,(445, 240) ,(441, 238)]
        self.face3 =[(329, 196) ,(334, 194) ,(340, 196) ,(340, 203) ,(345, 209) ,(350, 212) ,(350, 209) ,(358, 214) ,(363, 214) ,(368, 216) ,(378, 216) ,(385, 221) ,(393, 226) ,(401, 227) ,(410, 229) ,(398, 222) ,(386, 212) ,(400, 215) ,(391, 207) ,(405, 215) ,(398, 207) ,(406, 212) ,(401, 204) ,(407, 205) ,(412, 208) ,(418, 212) ,(416, 205) ,(422, 213) ,(426, 225) ,(423, 232) ,(426, 236) ,(431, 239) ,(437, 239) ,(443, 240) ,(450, 242) ,(454, 241) ,(455, 234) ,(456, 227) ,(456, 220) ,(450, 216) ,(455, 216) ,(464, 216) ,(470, 216) ,(480, 216) ,(487, 213) ,(480, 213) ,(489, 209) ,(486, 207) ,(492, 203) ,(486, 202) ,(499, 197) ,(488, 196) ,(498, 189) ,(487, 189) ,(493, 183) ,(490, 183) ,(486, 181) ,(496, 177) ,(486, 175) ,(496, 170) ,(487, 165) ,(480, 164) ,(492, 165) ,(500, 166) ,(505, 169) ,(500, 173) ,(502, 182) ,(504, 187) ,(501, 195) ,(506, 196) ,(506, 191) ,(509, 192) ,(509, 180) ,(508, 170) ,(507, 166) ,(504, 160) ,(505, 155) ,(491, 158) ,(481, 158) ,(472, 157) ,(464, 155) ,(456, 152) ,(452, 155) ,(450, 150) ,(447, 147) ,(442, 146) ,(435, 146) ,(429, 146) ,(421, 145) ,(415, 143) ,(407, 140) ,(413, 140) ,(407, 136) ,(402, 134) ,(392, 134) ,(386, 136) ,(379, 139) ,(377, 135) ,(373, 126) ,(366, 123) ,(362, 121) ,(358, 122) ,(353, 123) ,(348, 126) ,(344, 131) ,(342, 139) ,(342, 145) ,(352, 142) ,(357, 141) ,(366, 141) ,(376, 143) ,(387, 144) ,(382, 148) ,(392, 150) ,(399, 150) ,(410, 152) ,(418, 155) ,(424, 156) ,(433, 158) ,(439, 163) ,(429, 166) ,(438, 167) ,(436, 174) ,(422, 177) ,(410, 178) ,(399, 182) ,(390, 183) ,(403, 186) ,(388, 185) ,(373, 180) ,(373, 182) ,(361, 179) ,(350, 171) ,(348, 177) ,(343, 173) ,(341, 178) ,(340, 183) ,(341, 188) ,(336, 192) ,(328, 197)]
        self.sunglassesborder =[(324, 232) ,(331, 228) ,(338, 227) ,(345, 227) ,(357, 229) ,(368, 230) ,(378, 233) ,(387, 235) ,(394, 237) ,(403, 240) ,(410, 245) ,(411, 251) ,(407, 260) ,(404, 267) ,(398, 274) ,(392, 281) ,(386, 286) ,(378, 290) ,(370, 290) ,(358, 289) ,(350, 286) ,(343, 281) ,(334, 275) ,(326, 268) ,(321, 263) ,(320, 255) ,(320, 245) ,(322, 236) ,(325, 230) ,(336, 226) ,(346, 226) ,(352, 226) ,(362, 227) ,(370, 228) ,(379, 229) ,(389, 232) ,(399, 234) ,(407, 236) ,(418, 237) ,(427, 239) ,(437, 241) ,(447, 243) ,(462, 246) ,(475, 248) ,(483, 249) ,(489, 251) ,(496, 252) ,(502, 256) ,(509, 262) ,(512, 269) ,(512, 278) ,(507, 286) ,(503, 293) ,(497, 298) ,(492, 302) ,(483, 306) ,(474, 307) ,(465, 307) ,(455, 307) ,(444, 304) ,(439, 301) ,(432, 294) ,(430, 286) ,(429, 278) ,(430, 271) ,(430, 263) ,(431, 256) ,(434, 251) ,(441, 248) ,(450, 248) ,(458, 249) ,(465, 250) ,(474, 250) ,(480, 252) ,(487, 252) ,(496, 257) ,(505, 260)]
        self.sunglassescolor =[(326, 234) ,(332, 230) ,(337, 230) ,(344, 229) ,(352, 230) ,(360, 231) ,(369, 232) ,(378, 235) ,(387, 237) ,(395, 240) ,(403, 241) ,(409, 246) ,(409, 254) ,(407, 259) ,(405, 265) ,(401, 270) ,(396, 276) ,(391, 280) ,(385, 284) ,(378, 288) ,(366, 289) ,(360, 288) ,(351, 284) ,(344, 279) ,(336, 275) ,(330, 270) ,(326, 266) ,(322, 261) ,(321, 253) ,(321, 246) ,(322, 240) ,(326, 234)]
        self.sunglassescolor2 =[(436, 251) ,(448, 250) ,(459, 250) ,(468, 251) ,(478, 252) ,(486, 254) ,(494, 256) ,(503, 261) ,(510, 268) ,(510, 277) ,(507, 285) ,(501, 293) ,(493, 300) ,(484, 304) ,(476, 306) ,(465, 306) ,(456, 306) ,(446, 304) ,(439, 299) ,(434, 293) ,(430, 285) ,(430, 280) ,(431, 272) ,(431, 264) ,(432, 257) ,(437, 251)]
        self.eyebrow1 =[(327, 225) ,(335, 222) ,(340, 219) ,(344, 217) ,(345, 213) ,(351, 215) ,(357, 218) ,(365, 221) ,(365, 216) ,(376, 219) ,(380, 222) ,(388, 224) ,(392, 225) ,(400, 229) ,(408, 230) ,(412, 233) ,(407, 233) ,(402, 233) ,(396, 232) ,(389, 229) ,(379, 228) ,(372, 226) ,(364, 226) ,(355, 225) ,(348, 225) ,(341, 225) ,(337, 225) ,(333, 225) ,(327, 227) ,(325, 227)]
        self.eyebrow2 =[(452, 242) ,(459, 242) ,(468, 241) ,(476, 241) ,(474, 240) ,(482, 240) ,(488, 241) ,(493, 244) ,(498, 247) ,(503, 253) ,(495, 251) ,(489, 248) ,(481, 246) ,(476, 246) ,(472, 243) ,(468, 245) ,(466, 245) ,(463, 244) ,(457, 243) ,(453, 242)]
        self.face4 =[(304, 238) ,(313, 243) ,(314, 250) ,(315, 255) ,(318, 262) ,(322, 266) ,(327, 270) ,(331, 274) ,(337, 279) ,(344, 284) ,(352, 288) ,(343, 287) ,(352, 292) ,(346, 296) ,(337, 296) ,(329, 297) ,(347, 298) ,(341, 302) ,(337, 305) ,(331, 306) ,(337, 308) ,(334, 310) ,(327, 310) ,(323, 310) ,(329, 313) ,(332, 317) ,(337, 313) ,(342, 313) ,(349, 313) ,(344, 320) ,(347, 317) ,(353, 313) ,(356, 308) ,(358, 303) ,(365, 302) ,(364, 299) ,(366, 295) ,(367, 292) ,(372, 292) ,(377, 291) ,(384, 289) ,(376, 295) ,(371, 301) ,(367, 306) ,(362, 311) ,(360, 315) ,(358, 319) ,(356, 323) ,(354, 326) ,(350, 329) ,(346, 332) ,(346, 336) ,(342, 341) ,(341, 349) ,(337, 350) ,(334, 345) ,(333, 337) ,(329, 329) ,(320, 321) ,(311, 307) ,(307, 300) ,(303, 283) ,(298, 267) ,(297, 253) ,(298, 244) ,(301, 232) ,(304, 221) ,(308, 230) ,(315, 235) ,(319, 238) ,(319, 244) ,(316, 246) ,(309, 240) ,(304, 238)]
        self.k =[(358, 321) ,(360, 314) ,(365, 307) ,(369, 302) ,(373, 298) ,(377, 294) ,(380, 290) ,(387, 288) ,(383, 291) ,(378, 298) ,(377, 301) ,(375, 306) ,(371, 308) ,(368, 311) ,(365, 313) ,(362, 317) ,(358, 322)]
        self.nose1 =[(379, 318) ,(381, 316) ,(384, 316) ,(387, 318) ,(391, 321) ,(393, 325) ,(395, 330) ,(399, 331) ,(404, 333) ,(409, 333) ,(415, 332) ,(417, 330) ,(419, 328) ,(422, 325) ,(425, 324) ,(429, 325)]
        self.lips1 =[(353, 353) ,(356, 348) ,(360, 345) ,(365, 342) ,(370, 340) ,(377, 340) ,(383, 339) ,(390, 340) ,(395, 340) ,(403, 340) ,(407, 342) ,(414, 344) ,(421, 346) ,(428, 354) ,(431, 360) ,(434, 365) ,(433, 371) ,(432, 377) ,(423, 372) ,(420, 370) ,(412, 367) ,(406, 365) ,(397, 364) ,(389, 363) ,(384, 361) ,(378, 358) ,(372, 357) ,(367, 356) ,(361, 356) ,(353, 353)]
        self.h =[(355, 351) ,(363, 352) ,(369, 351) ,(379, 351) ,(384, 352) ,(389, 354) ,(393, 355) ,(396, 358) ,(402, 357) ,(407, 358) ,(413, 359) ,(419, 360) ,(425, 362) ,(429, 366)]
        self.m =[(364, 347) ,(368, 344) ,(373, 343) ,(378, 342) ,(375, 348) ,(380, 348) ,(384, 345) ,(389, 344) ,(394, 344) ,(399, 346) ,(396, 350) ,(399, 352) ,(404, 348) ,(409, 347) ,(415, 351) ,(418, 355) ,(421, 357) ,(421, 353) ,(430, 363) ,(431, 360) ,(427, 353) ,(421, 348) ,(417, 346) ,(409, 344) ,(399, 342) ,(393, 341) ,(388, 340) ,(382, 339) ,(374, 341) ,(370, 341) ,(363, 344) ,(359, 348)]
        self.nl =[(438, 301) ,(435, 305) ,(437, 311) ,(437, 317) ,(435, 322) ,(433, 325)]
        self.nlm =[(379, 305) ,(384, 308) ,(376, 308) ,(375, 313) ,(377, 315) ,(380, 313) ,(383, 312) ,(386, 313) ,(390, 316) ,(394, 320) ,(397, 324) ,(401, 328) ,(404, 329) ,(408, 331) ,(413, 329) ,(417, 326) ,(420, 323) ,(424, 321) ,(430, 322) ,(429, 321) ,(425, 320) ,(421, 321) ,(419, 322) ,(415, 325) ,(413, 327) ,(411, 327) ,(408, 328) ,(403, 327) ,(399, 324) ,(398, 321) ,(395, 317) ,(391, 314) ,(389, 311) ,(384, 308)]
        self.yy =[(376, 307) ,(376, 304) ,(379, 297) ,(383, 293) ,(389, 286) ,(395, 281) ,(400, 276) ,(404, 272) ,(409, 265) ,(411, 255) ,(417, 257) ,(415, 263) ,(415, 271) ,(414, 278) ,(413, 285) ,(413, 290) ,(411, 299) ,(410, 308) ,(410, 314) ,(406, 315) ,(402, 318) ,(396, 319) ,(393, 314) ,(388, 310) ,(384, 308) ,(377, 308)]
        self.yyy =[(419, 257) ,(423, 257) ,(429, 258) ,(428, 263) ,(429, 273) ,(429, 279) ,(429, 283) ,(429, 290) ,(432, 296) ,(436, 300) ,(434, 304) ,(436, 310) ,(436, 313) ,(434, 322) ,(433, 317) ,(430, 314) ,(426, 311) ,(425, 303) ,(424, 296) ,(420, 291) ,(419, 300) ,(419, 304) ,(417, 308) ,(415, 315) ,(412, 320) ,(412, 316) ,(412, 312) ,(412, 304) ,(415, 299) ,(415, 294) ,(416, 280) ,(418, 272) ,(417, 261) ,(419, 257) ,(419, 257) ,(423, 257) ,(429, 258) ,(428, 263) ,(429, 273) ,(429, 279) ,(429, 283) ,(429, 290) ,(432, 296) ,(436, 300) ,(434, 304) ,(436, 310) ,(436, 313) ,(434, 322) ,(433, 317) ,(430, 314) ,(426, 311) ,(425, 303) ,(424, 296) ,(420, 291) ,(419, 300) ,(419, 304) ,(417, 308) ,(415, 315) ,(412, 320) ,(412, 316) ,(412, 312) ,(412, 304) ,(415, 299) ,(415, 294) ,(416, 280) ,(418, 272) ,(417, 261) ,(419, 257)]
        self.s =[(289, 184) ,(294, 190) ,(297, 199) ,(301, 208) ,(304, 216) ,(308, 224) ,(311, 229) ,(317, 234) ,(321, 235)]
        self.ear1 =[(290, 195) ,(295, 203) ,(295, 212) ,(294, 224) ,(293, 234) ,(290, 243) ,(288, 252) ,(287, 257) ,(284, 269) ,(277, 265) ,(270, 259) ,(269, 251) ,(266, 239) ,(266, 231) ,(264, 223) ,(263, 214) ,(263, 208) ,(264, 201) ,(265, 197) ,(268, 194) ,(269, 189) ,(274, 186) ,(279, 186) ,(285, 190) ,(289, 194) ,(295, 204)]
        self.ear10 =[(279, 198) ,(276, 196) ,(271, 197) ,(270, 200) ,(267, 207) ,(267, 210) ,(267, 217) ,(267, 221) ,(267, 226) ,(269, 232) ,(270, 231) ,(269, 229) ,(269, 225) ,(269, 218) ,(271, 214) ,(272, 213) ,(273, 211) ,(275, 206) ,(278, 203) ,(279, 197)]
        self.ear12 =[(287, 214) ,(282, 217) ,(276, 220) ,(274, 226) ,(276, 232) ,(280, 236) ,(282, 240) ,(283, 248) ,(285, 247) ,(286, 243) ,(286, 238) ,(286, 235) ,(287, 232) ,(289, 229) ,(293, 224) ,(291, 218) ,(288, 214)]
        self.ear2 =[(510, 257) ,(511, 251) ,(512, 244) ,(513, 239) ,(516, 232) ,(519, 232) ,(525, 232) ,(529, 236) ,(529, 239) ,(530, 242) ,(528, 248) ,(524, 253) ,(523, 256) ,(521, 262) ,(519, 267) ,(516, 273) ,(514, 280) ,(512, 284) ,(510, 290) ,(507, 296) ,(502, 304) ,(504, 296) ,(505, 293) ,(507, 289) ,(510, 284) ,(513, 276) ,(513, 271) ,(511, 263) ,(510, 259)]
        self.sunl =[(513, 271) ,(519, 271) ,(519, 263) ,(518, 255) ,(518, 250) ,(517, 246) ,(515, 243) ,(513, 237) ,(516, 232) ,(517, 231) ,(514, 230)]
        self.face5 =[(435, 327) ,(440, 332) ,(443, 337) ,(447, 344) ,(450, 345) ,(449, 336) ,(448, 329) ,(448, 319) ,(449, 314) ,(461, 313) ,(466, 313) ,(477, 314) ,(474, 328) ,(473, 336) ,(468, 344) ,(468, 352) ,(476, 347) ,(476, 342) ,(482, 340) ,(485, 334) ,(490, 327) ,(492, 322) ,(494, 314) ,(498, 302) ,(501, 295) ,(494, 300) ,(494, 301) ,(489, 305) ,(483, 307) ,(473, 309) ,(462, 309) ,(452, 308) ,(444, 306) ,(440, 304) ,(440, 308) ,(440, 311) ,(439, 316) ,(438, 319) ,(436, 328)]
        self.sunl2 =[(411, 252) ,(417, 253) ,(423, 255) ,(428, 256) ,(431, 256)]
        self.j =[(354, 356) ,(355, 361) ,(355, 364) ,(362, 370) ,(366, 375) ,(370, 371) ,(376, 367) ,(382, 366) ,(390, 367) ,(397, 369) ,(403, 371) ,(410, 373) ,(411, 379) ,(416, 381) ,(419, 385) ,(421, 392) ,(425, 391) ,(427, 387) ,(430, 382) ,(433, 376) ,(434, 371) ,(431, 376) ,(425, 372) ,(418, 370) ,(413, 368) ,(406, 366) ,(401, 366) ,(396, 366) ,(391, 363) ,(382, 361) ,(379, 358) ,(370, 358) ,(364, 357) ,(355, 355)]
        self.c =[(518, 239) ,(523, 239) ,(523, 245) ,(522, 249) ,(520, 254) ,(518, 260) ,(515, 266) ,(513, 260) ,(514, 257) ,(514, 250) ,(514, 247) ,(515, 244) ,(516, 240) ,(517, 239)]
        self.neck =[(283, 346) ,(279, 354) ,(277, 366) ,(278, 373) ,(280, 382) ,(283, 388) ,(286, 392) ,(292, 398) ,(301, 404) ,(308, 410) ,(318, 417) ,(333, 421) ,(324, 390) ,(314, 380) ,(294, 357) ,(285, 345) ,(283, 345)]
        self.collar =[(283, 340) ,(284, 344) ,(278, 344) ,(276, 349) ,(273, 353) ,(272, 357) ,(269, 363) ,(266, 371) ,(264, 377) ,(262, 386) ,(261, 395) ,(260, 402) ,(259, 410) ,(259, 418) ,(259, 425) ,(264, 432) ,(270, 441) ,(274, 448) ,(280, 456) ,(286, 464) ,(293, 473) ,(298, 478) ,(302, 485) ,(308, 493) ,(311, 495) ,(315, 489) ,(318, 482) ,(323, 476) ,(330, 467) ,(337, 458) ,(344, 450) ,(347, 442) ,(334, 428) ,(319, 417) ,(314, 414) ,(307, 409) ,(300, 403) ,(293, 398) ,(286, 392) ,(281, 384) ,(278, 379) ,(278, 372) ,(278, 366) ,(280, 357) ,(281, 351) ,(283, 345)]
        self.collar2 =[(416, 451) ,(422, 460) ,(428, 467) ,(437, 476) ,(446, 484) ,(454, 494) ,(458, 489) ,(461, 481) ,(467, 469) ,(472, 458) ,(479, 447) ,(485, 436) ,(489, 426) ,(490, 411) ,(487, 401) ,(485, 392) ,(481, 382) ,(479, 376) ,(474, 375) ,(469, 377) ,(466, 387) ,(457, 397) ,(450, 404) ,(443, 414) ,(435, 425) ,(423, 431) ,(417, 436) ,(410, 447) ,(416, 451)]
        self.shirt =[(476, 375) ,(483, 381) ,(492, 382) ,(499, 386) ,(507, 388) ,(515, 388) ,(523, 391) ,(533, 396) ,(543, 399) ,(555, 403) ,(569, 408) ,(580, 411) ,(592, 414) ,(600, 419) ,(610, 423) ,(620, 429) ,(628, 433) ,(639, 440) ,(646, 448) ,(663, 456) ,(673, 464) ,(681, 470) ,(685, 477) ,(697, 491) ,(702, 503) ,(709, 516) ,(713, 529) ,(714, 538) ,(718, 550) ,(706, 561) ,(691, 561) ,(646, 561) ,(601, 561) ,(162, 560) ,(137, 561) ,(85, 560) ,(64, 560) ,(51, 560) ,(42, 559) ,(34, 559) ,(32, 559) ,(32, 556) ,(33, 549) ,(35, 535) ,(40, 525) ,(45, 516) ,(48, 510) ,(51, 504) ,(55, 499) ,(61, 491) ,(70, 481) ,(77, 477) ,(84, 470) ,(94, 464) ,(108, 457) ,(121, 453) ,(132, 447) ,(148, 438) ,(168, 429) ,(190, 419) ,(203, 412) ,(216, 406) ,(228, 401) ,(237, 397) ,(250, 392) ,(258, 389) ,(263, 387) ,(259, 407) ,(259, 417) ,(262, 433) ,(273, 448) ,(284, 463) ,(297, 479) ,(303, 486) ,(320, 475) ,(331, 462) ,(359, 469) ,(395, 466) ,(408, 460) ,(439, 451) ,(459, 425) ,(471, 409) ,(477, 388) ,(478, 374)]
        self.collarbg1 =[(282, 343) ,(276, 350) ,(273, 360) ,(270, 367) ,(267, 381) ,(264, 394) ,(264, 402) ,(263, 414) ,(264, 425) ,(270, 434) ,(277, 444) ,(285, 453) ,(293, 463) ,(299, 472) ,(306, 484) ,(310, 487) ,(317, 479) ,(322, 470) ,(329, 459) ,(335, 449) ,(330, 442) ,(322, 436) ,(322, 423) ,(309, 412) ,(301, 409) ,(288, 400) ,(279, 386) ,(277, 372) ,(276, 359) ,(281, 344)]
        self.collarbg2 =[(422, 451) ,(427, 458) ,(433, 465) ,(440, 473) ,(447, 478) ,(455, 486) ,(463, 475) ,(470, 457) ,(483, 434) ,(486, 422) ,(485, 410) ,(483, 394) ,(479, 383) ,(477, 381) ,(470, 389) ,(464, 399) ,(456, 410) ,(451, 417) ,(446, 423) ,(434, 435) ,(429, 443) ,(421, 453)]
        self.tie =[(329, 466) ,(333, 459) ,(340, 452) ,(347, 445) ,(362, 449) ,(380, 448) ,(407, 442) ,(414, 453) ,(418, 458) ,(419, 465) ,(413, 473) ,(410, 478) ,(404, 485) ,(406, 495) ,(413, 499) ,(419, 501) ,(425, 502) ,(429, 511) ,(433, 520) ,(438, 530) ,(441, 539) ,(448, 545) ,(456, 555) ,(462, 559) ,(449, 560) ,(421, 561) ,(388, 553) ,(385, 544) ,(381, 534) ,(378, 522) ,(376, 512) ,(375, 501) ,(373, 497) ,(370, 493) ,(359, 485) ,(348, 478) ,(340, 474) ,(329, 466)]
        self.d1 =[(315, 491) ,(318, 485) ,(320, 481) ,(325, 472) ,(330, 468) ,(340, 473) ,(349, 479) ,(356, 484) ,(366, 490) ,(374, 496) ,(375, 507) ,(377, 522) ,(380, 529) ,(383, 536) ,(386, 545) ,(389, 554) ,(393, 560) ,(382, 561) ,(374, 561) ,(364, 554) ,(362, 541) ,(363, 528) ,(364, 519) ,(364, 504) ,(364, 492) ,(356, 489) ,(357, 511) ,(352, 507) ,(342, 503) ,(335, 499) ,(325, 495) ,(314, 491)]
        self.d2 =[(109, 560) ,(104, 544) ,(99, 531) ,(91, 510) ,(89, 495) ,(103, 484) ,(120, 476) ,(135, 471) ,(156, 460) ,(170, 456) ,(179, 447) ,(192, 442) ,(203, 435) ,(213, 424) ,(219, 416) ,(238, 411) ,(239, 417) ,(240, 421) ,(248, 419) ,(258, 416) ,(261, 428) ,(267, 440) ,(276, 451) ,(283, 463) ,(292, 472) ,(300, 486) ,(308, 493) ,(313, 496) ,(316, 492) ,(328, 495) ,(339, 502) ,(348, 505) ,(356, 510) ,(356, 489) ,(363, 492) ,(364, 510) ,(362, 526) ,(363, 541) ,(363, 549) ,(363, 560) ,(338, 560) ,(313, 560) ,(294, 560) ,(238, 560) ,(216, 560) ,(206, 561) ,(197, 550) ,(185, 538) ,(163, 518) ,(141, 508) ,(150, 521) ,(155, 533) ,(163, 544) ,(172, 559) ,(169, 560) ,(151, 543) ,(161, 560) ,(153, 560) ,(132, 561) ,(113, 561) ,(107, 559)]
        self.d3 =[(72, 499) ,(80, 512) ,(85, 528) ,(90, 544) ,(73, 561) ,(72, 540) ,(73, 517) ,(72, 498)]
        self.d4 =[(412, 455) ,(417, 459) ,(417, 470) ,(409, 480) ,(404, 487) ,(406, 492) ,(411, 497) ,(419, 493) ,(426, 491) ,(440, 489) ,(446, 492) ,(454, 493) ,(447, 489) ,(439, 478) ,(433, 471) ,(428, 465) ,(422, 458) ,(417, 453) ,(413, 454) ,(413, 456)]
        self.d5 =[(486, 389) ,(489, 392) ,(492, 392) ,(497, 391) ,(504, 396) ,(512, 402) ,(523, 406) ,(531, 409) ,(546, 413) ,(552, 417) ,(543, 419) ,(527, 422) ,(514, 429) ,(506, 437) ,(519, 434) ,(531, 433) ,(495, 450) ,(527, 438) ,(512, 446) ,(527, 441) ,(539, 438) ,(556, 436) ,(567, 436) ,(578, 438) ,(587, 439) ,(599, 444) ,(618, 449) ,(634, 452) ,(648, 461) ,(659, 470) ,(670, 476) ,(682, 486) ,(672, 476) ,(682, 484) ,(689, 490) ,(695, 500) ,(697, 506) ,(701, 515) ,(703, 525) ,(710, 538) ,(711, 549) ,(714, 558) ,(701, 559) ,(691, 559) ,(680, 559) ,(668, 560) ,(654, 560) ,(648, 560) ,(635, 560) ,(616, 558) ,(599, 560) ,(582, 560) ,(569, 560) ,(554, 560) ,(530, 559) ,(510, 559) ,(492, 559) ,(464, 558) ,(456, 554) ,(449, 548) ,(443, 537) ,(435, 524) ,(431, 514) ,(426, 504) ,(417, 502) ,(412, 497) ,(427, 491) ,(432, 491) ,(441, 490) ,(451, 496) ,(457, 494) ,(461, 486) ,(464, 478) ,(470, 470) ,(475, 458) ,(481, 445) ,(488, 432) ,(489, 418) ,(489, 410) ,(486, 397) ,(488, 388)]
        self.d6 =[(374, 497) ,(377, 494) ,(381, 491) ,(386, 487) ,(393, 486) ,(400, 486)]
        self.d7 =[(179, 451) ,(190, 445) ,(205, 439) ,(241, 424) ,(246, 425) ,(253, 427) ,(259, 426) ,(261, 432) ,(266, 436) ,(271, 444) ,(276, 451) ,(282, 459) ,(287, 465) ,(283, 465) ,(272, 461) ,(267, 459) ,(257, 454) ,(263, 453) ,(268, 451) ,(272, 447) ,(268, 443) ,(265, 439) ,(263, 437) ,(257, 437) ,(251, 437) ,(241, 434) ,(238, 434) ,(240, 428) ,(239, 428) ,(232, 436) ,(218, 446) ,(207, 450) ,(199, 452) ,(185, 452) ,(179, 452)]
        self.d8 =[(361, 539) ,(354, 533) ,(344, 528) ,(334, 524) ,(321, 520) ,(304, 514) ,(289, 509) ,(275, 507) ,(250, 499) ,(265, 506) ,(284, 511) ,(297, 518) ,(244, 507) ,(261, 514) ,(273, 519) ,(288, 522) ,(300, 527) ,(315, 530) ,(330, 532) ,(330, 532) ,(347, 538) ,(361, 540)]
        self.pen = tu.Turtle()
        self.pen.speed(0)
        self.x_offset = 400
        self.y_offset = 300


    def go(self, x, y):
        self.pen.penup()
        self.pen.goto(x-self.x_offset,(y*-1)+self.y_offset)
        self.pen.pendown()  


    def paint(self,coord,co=(0,0,0)):
        self.pen.color(co)
        t_x,t_y = coord[0]
        self.go(t_x,t_y)
        self.pen.fillcolor(co)
        self.pen.begin_fill()
        t = 0
        for i in coord[1:]:
            print(i)
            x,y = i
            if t:
                self.go(x,y)
                t = 0
                self.pen.begin_fill()
                continue
            if x == -1 and y == -1:
                t = 1
                self.pen.end_fill()
                continue
            else:
                self.pen.goto(x-self.x_offset,(y*-1)+self.y_offset) 
        self.pen.end_fill()


    def draw_fn(self,coord,mode = 1,co = (0,0,0),thickness = 1):
        co = (co[0]/255,co[1]/255,co[2]/255)

        self.pen.color(co)

        if mode:
            self.pen.width(thickness)
            t_x,t_y = coord[0]
            self.go(t_x,t_y)
            t = 0
            for i in coord[1:]:
                print(i)
                x,y = i
                if t:
                    self.go(x,y)
                    t = 0
                    continue
                if x == -1 and y == -1:
                    t = 1
                    continue
                else:
                    self.pen.goto(x-self.x_offset,(y*-1)+self.y_offset)
        else:
            self.paint(coord=coord,co = co)

    
    def draw(self,retain=True):
        self.draw_fn(self.face1,co = (240, 195, 190),mode = 0)
        self.draw_fn(self.yy,co = (238, 157, 128),mode = 0)
        self.draw_fn(self.yyy,co = (238, 157, 128),mode = 0)
        self.draw_fn(self.nlm,co = (209, 133, 101),mode = 1,thickness=3)
        self.draw_fn(self.nl,co = (175, 94, 65),mode = 1,thickness=3)
        self.draw_fn(self.face2,co = (246, 174, 146),mode = 0)
        self.draw_fn(self.face3,co = (241, 157, 121),mode = 0)
        self.draw_fn(self.face4,co = (209, 128, 106),mode = 0)
        self.draw_fn(self.face5,co = (228, 147, 126),mode = 0)
        self.draw_fn(self.k,co = (140, 63, 37),mode = 0)
        self.draw_fn(self.nose1,co = (19, 0, 0),mode = 0,thickness=3)
        self.draw_fn(self.sunglassescolor,co = (71, 95, 97),mode = 0)
        self.draw_fn(self.sunglassescolor2,co = (71, 95, 97),mode = 0)
        self.draw_fn(self.eyebrow1,co = (30, 24, 24),mode = 0)
        self.draw_fn(self.eyebrow2,co = (30, 24, 24),mode = 0)
        self.draw_fn(self.sunglassesborder,co = (236, 225, 226),mode = 1,thickness=3)
        self.draw_fn(self.sunl2,co = (236, 225, 226),mode = 1,thickness=3)
        self.draw_fn(self.ear1,co = (247, 177, 157),mode = 0)
        self.draw_fn(self.ear10,co = (109, 27, 1),mode = 0)
        self.draw_fn(self.ear12,co = (109, 27, 1),mode = 0)
        self.draw_fn(self.ear2,co = (247, 177, 157),mode = 0)
        self.draw_fn(self.c,co = (152, 53, 17),mode = 0)
        self.draw_fn(self.sunl,co = (236, 225, 226),mode = 1,thickness=3)
        self.draw_fn(self.shirt,co = (241, 244, 253),mode = 0)
        self.draw_fn(self.tie,co = (174, 195, 238),mode = 0)
        self.draw_fn(self.d6,co = (124, 144, 194),mode = 1,thickness=3)
        self.draw_fn(self.d1,co = (125, 144, 203),mode = 0)
        self.draw_fn(self.d2,co = (214, 226, 248),mode = 0)
        self.draw_fn(self.d3,co = (214, 226, 248),mode = 0)
        self.draw_fn(self.d4,co = (125, 144, 203),mode = 0)
        self.draw_fn(self.d5,co = (214, 226, 248),mode = 0)
        self.draw_fn(self.d7,co = (125, 143, 202),mode = 0)
        self.draw_fn(self.d8,co = (125, 144, 203),mode = 0)
        self.draw_fn(self.collar,co = (241, 242, 255),mode = 0)
        self.draw_fn(self.collarbg1,co = (174, 195, 238),mode = 0)
        self.draw_fn(self.collar2,co = (241, 242, 255),mode = 0)
        self.draw_fn(self.collarbg2,co = (174, 195, 238),mode = 0)
        self.draw_fn(self.neck,co = (209, 129, 106),mode = 0)
        self.draw_fn(self.hairbeard,co = (34, 20, 20),mode = 0)
        self.draw_fn(self.j,co = (212, 133, 104),mode = 0)
        self.draw_fn(self.s,co = (213, 209, 209),mode = 1,thickness=4)
        self.draw_fn(self.hairbg,co = (0, 0, 0),mode = 0)
        self.draw_fn(self.lips1,co = (153, 48, 45),mode = 0)
        self.draw_fn(self.h,co = (43, 6, 7),mode = 1,thickness=3)
        self.draw_fn(self.m,co = (137, 35, 30),mode = 0)
        
        

        if retain:
            tu.done()

pen=googlemapslogo()
pen.draw()
